{"version":3,"file":"py-editor-CrcBapRX.js","sources":["../src/plugins/py-editor.js"],"sourcesContent":["// PyScript py-editor plugin\nimport { Hook, XWorker, dedent } from \"polyscript/exports\";\nimport { TYPES, stdlib } from \"../core.js\";\n\nconst RUN_BUTTON = `<svg style=\"height:20px;width:20px;vertical-align:-.125em;transform-origin:center;overflow:visible;color:green\" viewBox=\"0 0 384 512\" aria-hidden=\"true\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"><g transform=\"translate(192 256)\" transform-origin=\"96 0\"><g transform=\"translate(0,0) scale(1,1)\"><path d=\"M361 215C375.3 223.8 384 239.3 384 256C384 272.7 375.3 288.2 361 296.1L73.03 472.1C58.21 482 39.66 482.4 24.52 473.9C9.377 465.4 0 449.4 0 432V80C0 62.64 9.377 46.63 24.52 38.13C39.66 29.64 58.21 29.99 73.03 39.04L361 215z\" fill=\"currentColor\" transform=\"translate(-192 -256)\"></path></g></g></svg>`;\n\nlet id = 0;\nconst getID = (type) => `${type}-editor-${id++}`;\n\nconst envs = new Map();\nconst configs = new Map();\n\nconst hooks = {\n    worker: {\n        codeBeforeRun: () => stdlib,\n        // works on both Pyodide and MicroPython\n        onReady: ({ runAsync, io }, { sync }) => {\n            io.stdout = io.buffered(sync.write);\n            io.stderr = io.buffered(sync.writeErr);\n            sync.revoke();\n            sync.runAsync = runAsync;\n        },\n    },\n};\n\nasync function execute({ currentTarget }) {\n    const { env, pySrc, outDiv } = this;\n    const hasRunButton = !!currentTarget;\n\n    if (hasRunButton) {\n        currentTarget.disabled = true;\n        outDiv.innerHTML = \"\";\n    }\n\n    if (!envs.has(env)) {\n        const srcLink = URL.createObjectURL(new Blob([\"\"]));\n        const details = { type: this.interpreter };\n        const { config } = this;\n        if (config) {\n            details.configURL = config;\n            const { parse } = config.endsWith(\".toml\")\n                ? await import(/* webpackIgnore: true */ \"../3rd-party/toml.js\")\n                : JSON;\n            details.config = parse(await fetch(config).then((r) => r.text()));\n            const { interpreter } = details.config;\n            if (interpreter) details.version = interpreter;\n        }\n\n        const xworker = XWorker.call(new Hook(null, hooks), srcLink, details);\n\n        const { sync } = xworker;\n        const { promise, resolve } = Promise.withResolvers();\n        envs.set(env, promise);\n        sync.revoke = () => {\n            URL.revokeObjectURL(srcLink);\n            resolve(xworker);\n        };\n    }\n\n    // wait for the env then set the target div\n    // before executing the current code\n    envs.get(env).then((xworker) => {\n        xworker.onerror = ({ error }) => {\n            if (hasRunButton) {\n                outDiv.innerHTML += `<span style='color:red'>${\n                    error.message || error\n                }</span>\\n`;\n            }\n            console.error(error);\n        };\n\n        const enable = () => {\n            if (hasRunButton) currentTarget.disabled = false;\n        };\n        const { sync } = xworker;\n        sync.write = (str) => {\n            if (hasRunButton) outDiv.innerText += `${str}\\n`;\n        };\n        sync.writeErr = (str) => {\n            if (hasRunButton) {\n                outDiv.innerHTML += `<span style='color:red'>${str}</span>\\n`;\n            }\n        };\n        sync.runAsync(pySrc).then(enable, enable);\n    });\n}\n\nconst makeRunButton = (listener, type) => {\n    const runButton = document.createElement(\"button\");\n    runButton.className = `absolute ${type}-editor-run-button`;\n    runButton.innerHTML = RUN_BUTTON;\n    runButton.setAttribute(\"aria-label\", \"Python Script Run Button\");\n    runButton.addEventListener(\"click\", listener);\n    return runButton;\n};\n\nconst makeEditorDiv = (listener, type) => {\n    const editorDiv = document.createElement(\"div\");\n    editorDiv.className = `${type}-editor-input`;\n    editorDiv.setAttribute(\"aria-label\", \"Python Script Area\");\n\n    const runButton = makeRunButton(listener, type);\n    const editorShadowContainer = document.createElement(\"div\");\n\n    // avoid outer elements intercepting key events (reveal as example)\n    editorShadowContainer.addEventListener(\"keydown\", (event) => {\n        event.stopPropagation();\n    });\n\n    editorDiv.append(runButton, editorShadowContainer);\n\n    return editorDiv;\n};\n\nconst makeOutDiv = (type) => {\n    const outDiv = document.createElement(\"div\");\n    outDiv.className = `${type}-editor-output`;\n    outDiv.id = `${getID(type)}-output`;\n    return outDiv;\n};\n\nconst makeBoxDiv = (listener, type) => {\n    const boxDiv = document.createElement(\"div\");\n    boxDiv.className = `${type}-editor-box`;\n\n    const editorDiv = makeEditorDiv(listener, type);\n    const outDiv = makeOutDiv(type);\n    boxDiv.append(editorDiv, outDiv);\n\n    return [boxDiv, outDiv];\n};\n\nconst init = async (script, type, interpreter) => {\n    const [\n        { basicSetup, EditorView },\n        { Compartment },\n        { python },\n        { indentUnit },\n        { keymap },\n        { defaultKeymap },\n    ] = await Promise.all([\n        import(/* webpackIgnore: true */ \"../3rd-party/codemirror.js\"),\n        import(/* webpackIgnore: true */ \"../3rd-party/codemirror_state.js\"),\n        import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_lang-python.js\"\n        ),\n        import(/* webpackIgnore: true */ \"../3rd-party/codemirror_language.js\"),\n        import(/* webpackIgnore: true */ \"../3rd-party/codemirror_view.js\"),\n        import(/* webpackIgnore: true */ \"../3rd-party/codemirror_commands.js\"),\n    ]);\n\n    const isSetup = script.hasAttribute(\"setup\");\n    const hasConfig = script.hasAttribute(\"config\");\n    const env = `${interpreter}-${script.getAttribute(\"env\") || getID(type)}`;\n\n    if (hasConfig && configs.has(env)) {\n        throw new SyntaxError(\n            configs.get(env)\n                ? `duplicated config for env: ${env}`\n                : `unable to add a config to the env: ${env}`,\n        );\n    }\n\n    configs.set(env, hasConfig);\n\n    const source = script.src\n        ? await fetch(script.src).then((b) => b.text())\n        : script.textContent;\n    const context = {\n        interpreter,\n        env,\n        config:\n            hasConfig &&\n            new URL(script.getAttribute(\"config\"), location.href).href,\n        get pySrc() {\n            return isSetup ? source : editor.state.doc.toString();\n        },\n        get outDiv() {\n            return isSetup ? null : outDiv;\n        },\n    };\n\n    if (isSetup) {\n        execute.call(context, { currentTarget: null });\n        return;\n    }\n\n    const selector = script.getAttribute(\"target\");\n\n    let target;\n    if (selector) {\n        target =\n            document.getElementById(selector) ||\n            document.querySelector(selector);\n        if (!target) throw new Error(`Unknown target ${selector}`);\n    } else {\n        target = document.createElement(`${type}-editor`);\n        target.style.display = \"block\";\n        script.after(target);\n    }\n\n    if (!target.id) target.id = getID(type);\n    if (!target.hasAttribute(\"exec-id\")) target.setAttribute(\"exec-id\", 0);\n    if (!target.hasAttribute(\"root\")) target.setAttribute(\"root\", target.id);\n\n    // @see https://github.com/JeffersGlass/mkdocs-pyscript/blob/main/mkdocs_pyscript/js/makeblocks.js\n    const listener = execute.bind(context);\n    const [boxDiv, outDiv] = makeBoxDiv(listener, type);\n    boxDiv.dataset.env = script.hasAttribute(\"env\") ? env : interpreter;\n\n    const inputChild = boxDiv.querySelector(`.${type}-editor-input > div`);\n    const parent = inputChild.attachShadow({ mode: \"open\" });\n    // avoid inheriting styles from the outer component\n    parent.innerHTML = `<style> :host { all: initial; }</style>`;\n\n    target.appendChild(boxDiv);\n\n    const doc = dedent(script.textContent).trim();\n\n    // preserve user indentation, if any\n    const indentation = /^(\\s+)/m.test(doc) ? RegExp.$1 : \"    \";\n\n    const editor = new EditorView({\n        extensions: [\n            indentUnit.of(indentation),\n            new Compartment().of(python()),\n            keymap.of([\n                ...defaultKeymap,\n                { key: \"Ctrl-Enter\", run: listener, preventDefault: true },\n                { key: \"Cmd-Enter\", run: listener, preventDefault: true },\n                { key: \"Shift-Enter\", run: listener, preventDefault: true },\n            ]),\n            basicSetup,\n        ],\n        parent,\n        doc,\n    });\n\n    editor.focus();\n};\n\n// avoid too greedy MutationObserver operations at distance\nlet timeout = 0;\n\n// avoid delayed initialization\nlet queue = Promise.resolve();\n\n// reset interval value then check for new scripts\nconst resetTimeout = () => {\n    timeout = 0;\n    pyEditor();\n};\n\n// triggered both ASAP on the living DOM and via MutationObserver later\nconst pyEditor = () => {\n    if (timeout) return;\n    timeout = setTimeout(resetTimeout, 250);\n    for (const [type, interpreter] of TYPES) {\n        const selector = `script[type=\"${type}-editor\"]`;\n        for (const script of document.querySelectorAll(selector)) {\n            // avoid any further bootstrap by changing the type as active\n            script.type += \"-active\";\n            // don't await in here or multiple calls might happen\n            // while the first script is being initialized\n            queue = queue.then(() => init(script, type, interpreter));\n        }\n    }\n    return queue;\n};\n\nnew MutationObserver(pyEditor).observe(document, {\n    childList: true,\n    subtree: true,\n});\n\n// try to check the current document ASAP\nexport default pyEditor();\n"],"names":["id","getID","type","envs","Map","configs","hooks","worker","codeBeforeRun","stdlib","onReady","runAsync","io","sync","stdout","buffered","write","stderr","writeErr","revoke","async","execute","currentTarget","env","pySrc","outDiv","this","hasRunButton","disabled","innerHTML","has","srcLink","URL","createObjectURL","Blob","details","interpreter","config","configURL","parse","endsWith","import","JSON","fetch","then","r","text","version","xworker","XWorker","call","Hook","promise","resolve","Promise","withResolvers","set","revokeObjectURL","get","onerror","error","message","console","enable","str","innerText","makeEditorDiv","listener","editorDiv","document","createElement","className","setAttribute","runButton","addEventListener","makeRunButton","editorShadowContainer","event","stopPropagation","append","makeBoxDiv","boxDiv","makeOutDiv","init","script","basicSetup","EditorView","Compartment","python","indentUnit","keymap","defaultKeymap","all","n","x","q","isSetup","hasAttribute","hasConfig","getAttribute","SyntaxError","source","src","b","textContent","context","location","href","editor","state","doc","toString","selector","target","getElementById","querySelector","Error","style","display","after","bind","dataset","parent","attachShadow","mode","appendChild","dedent","trim","indentation","test","RegExp","$1","extensions","of","key","run","preventDefault","focus","timeout","queue","resetTimeout","pyEditor","setTimeout","TYPES","querySelectorAll","MutationObserver","observe","childList","subtree","pyEditor$1"],"mappings":"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"}